{"version":3,"sources":["../src/core/State.ts","../src/sound/Sound.ts","../src/core/XHR.ts","../src/core/NodeFactory.ts","../src/core/AudioCore.ts","../src/core/RAFTimer.ts","../src/sound/WebAudioSound.ts","../src/sound/Html5AudioSound.ts","../src/core/Tween.ts","../src/enums.ts","../src/track/Track.ts","../src/core/HeartBeat.ts","../src/core/DuelState.ts","../src/AudioBox.ts","app.ts"],"names":[],"mappings":"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","file":"app.7652a920.js","sourceRoot":"..","sourcesContent":["export default abstract class State {\r\n\r\n\tprotected _state: string;\r\n\r\n\tprotected get state(): string {\r\n\t\treturn this._state;\r\n\t}\r\n\r\n\tprotected set state(val: string) {\r\n\t\tconst prevState = this._state;\r\n\t\tthis._state = val;\r\n\t\tthis.onStateChanged(prevState, this.state);\r\n\t}\r\n\r\n\tprotected abstract onStateChanged(prevState: string, currState: string): void;\r\n}","import State from \"../core/State\";\r\n\r\nexport default abstract class Sound extends State {\r\n\r\n\tprivate _key: string;\r\n\r\n\tpublic get key(): string {\r\n\t\treturn this._key;\r\n\t}\r\n\r\n\tpublic get currentState(): string {\r\n\t\treturn this._state;\r\n\t}\r\n\r\n\tconstructor(key: string, src: string, autoLoad: boolean = true) {\r\n\t\tsuper();\r\n\t\tthis._key = key;\r\n\t}\r\n\r\n\tpublic abstract play(volume: number, loop: boolean): void;\r\n\tpublic abstract pause(): void;\r\n\tpublic abstract resume(): void;\r\n\tpublic abstract stop(): void;\r\n\tpublic abstract setVolume(volume: number): void;\r\n\tpublic abstract mute(value: boolean): void;\r\n\r\n\tpublic abstract load(src: string): void;\r\n\r\n\tpublic onStateChange: (target: Sound, prevState: string, currState: string) => void;\r\n\r\n}","export interface XHROptions {\r\n\turl: string;\r\n\twithCredentials?: boolean;\r\n\theaders?: { [key: string]: string };\r\n}\r\n\r\nexport default class XHR {\r\n\r\n\tprivate _xhr: XMLHttpRequest;\r\n\r\n\tprivate _config: XHROptions;\r\n\r\n\tprivate _reject: Function;\r\n\tprivate _resolve: Function;\r\n\r\n\tconstructor(config: XHROptions) {\r\n\t\tthis._config = config;\r\n\t\tthis._xhr = new XMLHttpRequest();\r\n\t\tthis._xhr.open('GET', config.url, true);\r\n\t\tthis._xhr.withCredentials = config.withCredentials;\r\n\t\tthis._xhr.responseType = 'arraybuffer';\r\n\t\tif (config.headers) {\r\n\t\t\tObject.keys(config.headers).forEach((key) => {\r\n\t\t\t\tthis._xhr.setRequestHeader(key, config.headers[key]);\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis._xhr.onload = this.onload.bind(this);\r\n\t\tthis._xhr.onerror = this.onerror.bind(this);\r\n\t}\r\n\r\n\tpublic send(): Promise<any> {\r\n\t\tthis._xhr.send();\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._resolve = resolve;\r\n\t\t\tthis._reject = reject;\r\n\t\t})\r\n\t}\r\n\r\n\tprivate onerror(statusCode: number): void {\r\n\t\tconsole.error(`url:${this._config.url} returns code:${statusCode}`);\r\n\t\tthis._reject(statusCode);\r\n\t}\r\n\r\n\tprivate onload(): void {\r\n\t\tif (this._xhr.status !== 200) {\r\n\t\t\tthis.onerror(this._xhr.status);\r\n\t\t\tthis._reject(this._xhr.status);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._resolve(this._xhr.response);\r\n\t}\r\n}","export type AvaliableAudioNode = GainNode | AudioWorkletNode | AnalyserNode;\r\n\r\nexport enum AudioNodeType {\r\n\tGainNode,\r\n\tAudioWorkletNode,\r\n\tAnalyserNode\r\n}\r\n\r\nexport default class NodeFactory {\r\n\r\n\tprivate _context: AudioContext;\r\n\r\n\tconstructor(context: AudioContext) {\r\n\t\tthis._context = context;\r\n\t}\r\n\r\n\tpublic create(nodeType: AudioNodeType, ...args): AvaliableAudioNode {\r\n\t\tswitch (nodeType) {\r\n\t\t\tcase AudioNodeType.GainNode:\r\n\t\t\t\treturn this._context.createGain();\r\n\t\t\tcase AudioNodeType.AnalyserNode:\r\n\t\t\t\treturn this._context.createAnalyser();\r\n\t\t\tcase AudioNodeType.AudioWorkletNode:\r\n\t\t\t\t{\r\n\t\t\t\t\tconst node = new AudioWorkletNode(this._context, args[0], args[1]);\r\n\t\t\t\t\treturn node;\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import NodeFactory, { AudioNodeType, AvaliableAudioNode } from \"./NodeFactory\";\r\n/**\r\n * The web audio core controller.\r\n * Note master node is always a gain node.\r\n *\r\n * @export\r\n * @class AudioCore\r\n */\r\nexport default class AudioCore {\r\n\r\n\tpublic static totalFiles: number = 0;\r\n\r\n\tprivate static _isInitialized = false;\r\n\r\n\tprivate static _loadedFileCount: number = 0;\r\n\r\n\tprivate static _masterGain: GainNode;\r\n\r\n\tprivate static _nodes: Array<AvaliableAudioNode> = [];\r\n\r\n\tprivate static _nodeFactory: NodeFactory;\r\n\r\n\tpublic static get masterGain(): GainNode {\r\n\t\treturn this._masterGain;\r\n\t}\r\n\r\n\tpublic static get loadedFileCount(): number {\r\n\t\treturn AudioCore._loadedFileCount\r\n\t}\r\n\r\n\tprivate static _context: AudioContext | webkitAudioContext;\r\n\r\n\tpublic static get context(): AudioContext | webkitAudioContext {\r\n\t\tif (AudioCore._context) {\r\n\t\t\treturn AudioCore._context;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static get useWebAudio(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate static log(text): void {\r\n\t\tconst div = document.createElement('div');\r\n\t\tdiv.innerHTML = text;\r\n\t\tdocument.body.appendChild(div);\r\n\t}\r\n\r\n\tpublic static init(): AudioContext | webkitAudioContext {\r\n\t\tAudioCore.log('init');\r\n\t\tif (AudioCore._isInitialized) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tAudioCore.createContext();\r\n\t\tAudioCore._nodeFactory = new NodeFactory(this._context);\r\n\t\tAudioCore.appendNode(AudioNodeType.GainNode);\r\n\t\tAudioCore.unlock();\r\n\t\tdocument.addEventListener('mousedown', AudioCore.unlock, true);\r\n\t\tdocument.addEventListener('touchend', AudioCore.unlock, true);\r\n\t\tAudioCore._isInitialized = true;\r\n\t\treturn AudioCore.context;\r\n\t}\r\n\r\n\tpublic static unlock(): void {\r\n\t\tif (AudioCore.context.state == \"running\") {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst audio = new Audio();\r\n\t\taudio.src = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjI5LjEwMAAAAAAAAAAAAAAA/+M4wAAAAAAAAAAAAEluZm8AAAAPAAAAEAAABVgANTU1NTU1Q0NDQ0NDUFBQUFBQXl5eXl5ea2tra2tra3l5eXl5eYaGhoaGhpSUlJSUlKGhoaGhoaGvr6+vr6+8vLy8vLzKysrKysrX19fX19fX5eXl5eXl8vLy8vLy////////AAAAAExhdmM1OC41NAAAAAAAAAAAAAAAACQCgAAAAAAAAAVYCADpmgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/+MYxAAAAANIAAAAAExBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVMQU1FMy4xMDBVVVVVVVVVVVVV/+MYxDsAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVMQU1FMy4xMDBVVVVVVVVVVVVV/+MYxHYAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVMQU1FMy4xMDBVVVVVVVVVVVVV/+MYxLEAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVMQU1FMy4xMDBVVVVVVVVVVVVV/+MYxMQAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVMQU1FMy4xMDBVVVVVVVVVVVVV/+MYxMQAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVMQU1FMy4xMDBVVVVVVVVVVVVV/+MYxMQAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVMQU1FMy4xMDBVVVVVVVVVVVVV/+MYxMQAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVMQU1FMy4xMDBVVVVVVVVVVVVV/+MYxMQAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVMQU1FMy4xMDBVVVVVVVVVVVVV/+MYxMQAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVMQU1FMy4xMDBVVVVVVVVVVVVV/+MYxMQAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVMQU1FMy4xMDBVVVVVVVVVVVVV/+MYxMQAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVMQU1FMy4xMDBVVVVVVVVVVVVV/+MYxMQAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV/+MYxMQAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV/+MYxMQAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV/+MYxMQAAANIAAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV';\r\n\t\taudio.play();\r\n\r\n\t\tvar source = AudioCore.context.createBufferSource();\r\n\t\tsource.buffer = AudioCore.context.createBuffer(1, 1, 22050);\r\n\t\tsource.connect(AudioCore.context.destination);\r\n\t\tsource.start(0, 0, 0);\r\n\t\tAudioCore.log(`unlock play`);\r\n\t\tdocument.removeEventListener('mousedown', AudioCore.unlock, true);\r\n\t\tdocument.removeEventListener('touchend', AudioCore.unlock, true);\r\n\t}\r\n\r\n\tpublic static mute(value: boolean): void {\r\n\t\tAudioCore.masterGain.gain.value = (value) ? 0 : 1;\r\n\t}\r\n\r\n\tpublic static set volume(val: number) {\r\n\r\n\t}\r\n\r\n\tpublic static appendNode(nodeType: AudioNodeType, ...args): AvaliableAudioNode {\r\n\t\tlet node: AvaliableAudioNode;\r\n\t\tnode = AudioCore._nodeFactory.create(nodeType, ...args);\r\n\t\tif (this._nodes.length == 0) {\r\n\t\t\tthis._nodes.push(node);\r\n\t\t\tthis._masterGain = node as GainNode;\r\n\t\t\tnode.connect(AudioCore.context.destination);\r\n\t\t} else {\r\n\t\t\tconst prevNode = this._nodes[this._nodes.length - 1];\r\n\t\t\tprevNode.disconnect();\r\n\t\t\tprevNode.connect(node);\r\n\t\t\tthis._nodes.push(node);\r\n\t\t\tnode.connect(AudioCore.context.destination);\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n\r\n\tprivate static createContext(): AudioContext | webkitAudioContext {\r\n\t\tif (AudioCore.context) {\r\n\t\t\treturn AudioCore.context;\r\n\t\t}\r\n\t\tAudioCore.log(`createContext`);\r\n\t\ttry {\r\n\t\t\tif (typeof AudioContext !== 'undefined') {\r\n\t\t\t\tAudioCore._context = new AudioContext();\r\n\t\t\t} else if (typeof window[\"webkitAudioContext\"] !== 'undefined') {\r\n\t\t\t\tAudioCore._context = new window[\"webkitAudioContext\"]();\r\n\t\t\t} else {\r\n\t\t\t\t// Howler.usingWebAudio = false;\r\n\t\t\t}\r\n\t\t\treturn AudioCore.context;\r\n\t\t} catch (e) {\r\n\t\t\t// Howler.usingWebAudio = false;\r\n\t\t\treturn AudioCore.context;\r\n\t\t}\r\n\t}\r\n}","/**\r\n * 使用request animation的timer\b,支援系統timeScale更動\r\n *\r\n * @export\r\n * @class RAFTimer\r\n */\r\nexport default class RAFTimer {\r\n\r\n\tprivate _delta = 0;\r\n\r\n\tprivate _sum = 0;\r\n\r\n\tprivate _target = 0;\r\n\r\n\tprivate _repeat = -1;\r\n\r\n\tprivate _count = 0;\r\n\r\n\tprivate _resolveForTimeout: Function;\r\n\r\n\tprivate _isTimeout = false;\r\n\r\n\tprivate _isInterval = false;\r\n\r\n\t// 配合interval功能使用\r\n\tprivate _interval = 0;\r\n\r\n\tprivate _isInitialized = false;\r\n\r\n\tprivate _shouldStop = false;\r\n\r\n\tprivate _callback: Function;\r\n\r\n\t/**\r\n\t * 此timer建立時的時間\r\n\t *\r\n\t * @private\r\n\t * @type {number}\r\n\t * @memberof RATimer\r\n\t */\r\n\tprivate _createTime: number;\r\n\r\n\t/**\r\n\t * 若有 exprited interfal, 會觸發\r\n\t *\r\n\t * @private\r\n\t * @type {Function}\r\n\t * @memberof RATimer\r\n\t */\r\n\tprivate _onExpired: Function;\r\n\r\n\tprivate _elapsedTick = 0;\r\n\r\n\tprivate _listenerKey: string;\r\n\r\n\tprivate _visibilityListener: string;\r\n\r\n\tprivate _visibility: string;\r\n\tprivate _hidden: string;\r\n\r\n\tconstructor() {\r\n\t\tthis._listenerKey = window.heartBeat.registerListener(this.onTick.bind(this));\r\n\t\tthis._createTime = new Date().getTime();\r\n\t\tthis.setVisiblityAndHidden();\r\n\t}\r\n\r\n\tprivate setVisiblityAndHidden(): void {\r\n\t\tif (typeof document.hidden !== 'undefined') { // Opera 12.10 and Firefox 18 and later support\r\n\t\t\tthis._visibility = 'visibilitychange';\r\n\t\t\tthis._hidden = 'hidden';\r\n\t\t} else if (typeof (document as any).msHidden !== 'undefined') {\r\n\t\t\tthis._visibility = 'msvisibilitychange';\r\n\t\t\tthis._hidden = 'msHidden';\r\n\t\t} else if (typeof (document as any).mozHidden !== 'undefined') {\r\n\t\t\tthis._visibility = 'mozvisibilitychange';\r\n\t\t\tthis._hidden = 'mozHidden';\r\n\t\t} else if (typeof (document as any).webkitHidden !== 'undefined') {\r\n\t\t\tthis._visibility = 'webkitvisibilitychange';\r\n\t\t\tthis._hidden = 'webkitHidden';\r\n\t\t}\r\n\t}\r\n\r\n\tprivate get isVisible(): boolean {\r\n\t\tif ((document as any)[this._hidden]) {\r\n\t\t\treturn false\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\t\r\n\r\n\t/**\r\n\t * 過n毫秒觸發一次, 同window.setTimeout\r\n\t *\r\n\t * @param {number} val\r\n\t * @returns {Promise<any>}\r\n\t * @memberof RATimer\r\n\t */\r\n\tpublic timeout(val: number): Promise<any> {\r\n\t\tif (this._isInitialized) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._isInitialized = true;\r\n\t\tthis._target = val;\r\n\t\tthis._isTimeout = true;\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis._resolveForTimeout = resolve;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate handleVisibilityChange(): void {\r\n\t\tif (this.isVisible) {\r\n\t\t\tconst elapsedTime = new Date().getTime() - this._createTime;\r\n\t\t\tthis._elapsedTick = Math.floor(elapsedTime / this._interval);\r\n\t\t} else {\r\n\t\t\tthis._createTime = new Date().getTime();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 每過n毫秒觸發一次callback, 同window.setInterval\r\n\t *\r\n\t * @param {Function} callback,回傳已觸發次數\r\n\t * @param {number} interval 間隔時間\r\n\t * @param {number} [triggerTimes=-1] -1:無限循環,預設無限循環\r\n\t * @param {Function} _onExpired [optional] 過期的interval.\r\n\t * @returns {Promise<any>} 如果循環次數有限,最後會resolve promise\r\n\t * @memberof RATimer\r\n\t */\r\n\tpublic interval(callback: Function, interval: number, triggerTimes = -1, onExpired?: Function): Promise<any> {\r\n\t\tif (this._isInitialized) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._interval = interval;\r\n\t\tthis._delta = interval;\r\n\t\tthis._target = this._delta;\r\n\t\tthis._isInterval = true;\r\n\t\tthis._callback = callback;\r\n\t\tthis._repeat = triggerTimes;\r\n\t\tthis._onExpired = onExpired;\r\n\r\n\t\t// if (BrowserInfo.isSupportVisibilityAPI() && !this._visibilityListener) {\r\n\t\t// \tthis._visibilityListener = this._emitter.on(Emitter.ON_VISIBILITY_CHANGED, this.handleVisibilityChange.bind(this));\r\n\t\t// }\r\n\r\n\t\tthis._isInitialized = true;\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis._resolveForTimeout = resolve;\r\n\r\n\t\t});\r\n\t}\r\n\r\n\tprotected onTick(tick: number): void {\r\n\t\tif (this._shouldStop) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._sum += tick;\r\n\r\n\t\tif (this._isTimeout) {\r\n\t\t\tif (this._sum >= this._target) {\r\n\t\t\t\tthis.stop();\r\n\t\t\t\tthis._resolveForTimeout();\r\n\t\t\t\tthis._resolveForTimeout = null;\r\n\t\t\t}\r\n\t\t} else if (this._isInterval) {\r\n\t\t\tlet shouldFireCallback = true;\r\n\t\t\tif (this._elapsedTick !== 0 && this._onExpired) { //過期的interval處理\r\n\t\t\t\tconst before = this._count;\r\n\t\t\t\tthis._count += this._elapsedTick;\r\n\r\n\t\t\t\tlet passedTimes;\r\n\r\n\t\t\t\tif (this._repeat === -1) {\r\n\t\t\t\t\tpassedTimes = this._elapsedTick;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpassedTimes = (this._count >= this._repeat) ? this._repeat : this._elapsedTick;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._onExpired(before + 1, passedTimes);\r\n\r\n\t\t\t\tif (this._count >= this._repeat) {\r\n\t\t\t\t\tthis.stop();\r\n\t\t\t\t\tthis._resolveForTimeout();\r\n\t\t\t\t\tthis._resolveForTimeout = null;\r\n\t\t\t\t\tshouldFireCallback = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._elapsedTick = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (shouldFireCallback && this._sum >= this._target) {\r\n\t\t\t\tthis._target += this._delta;\r\n\t\t\t\tthis._count++;\r\n\t\t\t\tthis._callback(this._count);\r\n\t\t\t\tif (this._repeat !== -1) {//有限次數\r\n\t\t\t\t\tif (this._count === this._repeat) {\r\n\t\t\t\t\t\tthis.stop();\r\n\t\t\t\t\t\tthis._resolveForTimeout();\r\n\t\t\t\t\t\tthis._resolveForTimeout = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 終止Timer執行\r\n\t *\r\n\t * @memberof RATimer\r\n\t */\r\n\tpublic stop(): void {\r\n\t\tthis._shouldStop = true;\r\n\t\tif (this._visibilityListener) {\r\n\t\t\t//this._emitter.removeListener(Emitter.ON_VISIBILITY_CHANGED, this._visibilityListener);\r\n\t\t\tthis._visibilityListener = null;\r\n\t\t}\r\n\t\twindow.heartBeat.removeListener(this._listenerKey);\r\n\t}\r\n}","import Sound from \"./Sound\";\r\nimport XHR from \"../core/XHR\";\r\nimport AudioCore from \"../core/AudioCore\";\r\nimport RAFTimer from \"../core/RAFTimer\";\r\nimport { AudioState } from \"../AudioBox\";\r\n\r\nenum NodeType {\r\n\tMAIN,\r\n\tSPARE\r\n}\r\n\r\nexport default class WebAudioSound extends Sound {\r\n\r\n\tprivate _audioBuffer: AudioBuffer;\r\n\r\n\tprivate _mainNode: AudioBufferSourceNode;\r\n\tprivate _loopNode: AudioBufferSourceNode;\r\n\r\n\tprivate _resolveForReady: Function;\r\n\r\n\tprivate _prevPlayTime: number;\r\n\r\n\t/**\r\n\t * The elapsed time when stops the sound. in second\r\n\t *\r\n\t * @private\r\n\t * @type {number}\r\n\t * @memberof WebAudioSound\r\n\t */\r\n\tprivate _offset: number = 0;\r\n\r\n\tprivate _tryCleanFailed: boolean = false;\r\n\r\n\tprivate _loop: boolean = false;\r\n\r\n\tprivate _volume: number = 1;\r\n\r\n\tpublic get volume(): number {\r\n\t\treturn this._volume;\r\n\t}\r\n\r\n\tprivate _activeNodeType: NodeType = NodeType.MAIN;\r\n\r\n\tprivate _loopTimer: RAFTimer;\r\n\tprivate _endTimer: RAFTimer;\r\n\r\n\tprivate _gainNode: GainNode;\r\n\r\n\t/**\r\n\t * The sound duration in second\r\n\t *\r\n\t * @readonly\r\n\t * @type {number}\r\n\t * @memberof WebAudioSound\r\n\t */\r\n\tpublic get duration(): number {\r\n\t\treturn this._audioBuffer.duration;\r\n\t}\r\n\r\n\tprivate get currentActiveNode(): AudioBufferSourceNode {\r\n\t\tif (this._activeNodeType == NodeType.MAIN) {\r\n\t\t\treturn this._mainNode;\r\n\t\t} else {\r\n\t\t\treturn this._loopNode;\r\n\t\t}\r\n\t}\r\n\r\n\tconstructor(key: string, src: string, autoLoad: boolean = true) {\r\n\t\tsuper(key, src, autoLoad);\r\n\t\tthis.load(src);\r\n\t\tthis.createGainNode();\r\n\t}\r\n\r\n\tprivate createGainNode(): void {\r\n\t\tthis._gainNode = AudioCore.context.createGain();\r\n\t\tthis._gainNode.connect(AudioCore.masterGain);\r\n\t}\r\n\r\n\tprivate onLoadError(): void {\r\n\r\n\t}\r\n\r\n\tprivate onDecodeSuccess(audiobuffer: AudioBuffer): void {\r\n\t\tthis.state = AudioState.ready;\r\n\t\tthis.state = AudioState.idle;\r\n\t\tthis._audioBuffer = audiobuffer;\r\n\t}\r\n\r\n\tprivate onDecodeError(e): void {\r\n\t\tthis.state = AudioState.error;\r\n\t\tthis.log('onDecodeError');\r\n\t}\r\n\r\n\tprivate log(text): void {\r\n\t\tconst div = document.createElement('div');\r\n\t\tdiv.innerHTML = text;\r\n\t\tdocument.body.appendChild(div);\r\n\t}\r\n\r\n\tprivate toggleActiveNode(): void {\r\n\t\tif (this._activeNodeType == NodeType.MAIN) {\r\n\t\t\tthis._activeNodeType = NodeType.SPARE;\r\n\t\t} else {\r\n\t\t\tthis._activeNodeType = NodeType.MAIN;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate decode(buffer: ArrayBuffer): void {\r\n\t\tthis.state = AudioState.decoding;\r\n\t\tAudioCore.context.decodeAudioData(buffer, this.onDecodeSuccess.bind(this), this.onDecodeError.bind(this));\r\n\t}\r\n\r\n\tprivate createSourceNodeAndConnect(): void {\r\n\t\tlet target: AudioBufferSourceNode;\r\n\t\ttarget = AudioCore.context.createBufferSource();\r\n\t\ttarget.buffer = this._audioBuffer;\r\n\r\n\t\ttarget.connect(this._gainNode);\r\n\t\tif (this._activeNodeType == NodeType.MAIN) {\r\n\t\t\tthis._mainNode = target;\r\n\t\t} else {\r\n\t\t\tthis._loopNode = target;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate deleteSourceNode(): void {\r\n\t\tlet target: AudioBufferSourceNode = this.currentActiveNode;\r\n\t\ttarget.stop(0);\r\n\t\ttarget.disconnect();\r\n\t\ttarget.onended = null;\r\n\t\tthis.tryClearBuffer(target);\r\n\t\ttarget = null;\r\n\t}\r\n\r\n\tprivate tryClearBuffer(sourceNode: AudioBufferSourceNode): void {\r\n\t\tif (!this.isRunningOnMac) {\r\n\t\t\ttry {\r\n\t\t\t\tsourceNode.buffer = null;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis._tryCleanFailed = true;\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry { sourceNode.buffer = AudioCore.context.createBuffer(1, 1, 22050); } catch (e) { this._tryCleanFailed = true; }\r\n\t}\r\n\r\n\tprivate get isRunningOnMac(): boolean {\r\n\t\treturn window.navigator.userAgent.indexOf(\"Mac OS X\") > -1;\r\n\t}\r\n\r\n\tprivate start(volume?: number, loop: boolean = false): void {\r\n\t\tthis.createSourceNodeAndConnect();\r\n\t\tthis._prevPlayTime = AudioCore.context.currentTime;\r\n\t\tthis.state = AudioState.playing;\r\n\r\n\t\tif (this._loop) {\r\n\t\t\tif (!this._loopTimer) {\r\n\t\t\t\tthis._loopTimer = new RAFTimer();\r\n\t\t\t\tthis._loopTimer.timeout((this.duration - this._offset - 0.2) * 1000).then(() => {\r\n\t\t\t\t\tthis.onLoopPoint();\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.currentActiveNode.onended = this.onEnded.bind(this);\r\n\t\t} else {\r\n\t\t\t// if is playing, refresh the end timer\r\n\t\t\tif (this.state == AudioState.playing) {\r\n\t\t\t\tif (this._endTimer) {\r\n\t\t\t\t\tthis._endTimer.stop();\r\n\t\t\t\t\tthis._endTimer = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._endTimer = new RAFTimer();\r\n\t\t\tthis._endTimer.timeout(this.duration * 1000).then(() => {\r\n\t\t\t\tthis.onEnded();\r\n\t\t\t})\r\n\r\n\t\t}\r\n\r\n\t\tif (this._offset > this.duration) {\r\n\t\t\tthis._offset = 0;\r\n\t\t}\r\n\r\n\t\tif (volume !== undefined) {\r\n\t\t\tthis.setVolume(volume);\r\n\t\t}\r\n\r\n\t\tthis.currentActiveNode.start(0, this._offset);\r\n\t\tthis.log(`context info:${AudioCore.context.state}`);\r\n\t}\r\n\r\n\tprivate onEnded(): void {\r\n\t\tif (!this._loop) {\r\n\t\t\tthis.state = AudioState.idle;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate removeLoopTimer(): void {\r\n\t\tif (this._loopTimer) {\r\n\t\t\tthis._loopTimer.stop();\r\n\t\t\tthis._loopTimer = null;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onLoopPoint(): void {\r\n\t\tthis.log(`on loop point`);\r\n\t\tthis._loopTimer = null;\r\n\t\tthis._offset = 0;\r\n\t\tthis.toggleActiveNode();\r\n\t\tthis.start();\r\n\t}\r\n\r\n\tpublic load(url: string): void {\r\n\t\tthis.state = AudioState.loading;\r\n\t\tconst xhr = new XHR({\r\n\t\t\turl\r\n\t\t});\r\n\t\txhr.send()\r\n\t\t\t.then((resp: ArrayBuffer) => {\r\n\t\t\t\tthis.decode(resp);\r\n\t\t\t}).catch(() => {\r\n\r\n\t\t\t})\r\n\t}\r\n\r\n\tpublic play(volume: number = 1, loop: boolean = false): void {\r\n\t\tif (this.currentActiveNode) {\r\n\t\t\tthis.deleteSourceNode();\r\n\t\t}\r\n\r\n\t\tthis._loop = loop;\r\n\r\n\t\tif (this.state == AudioState.loading || this.state == AudioState.decoding) {\r\n\t\t\tconst waitForReady = new Promise((resolve) => {\r\n\t\t\t\tthis._resolveForReady = resolve;\r\n\t\t\t});\r\n\t\t\twaitForReady.then(() => {\r\n\t\t\t\tthis.start(volume, loop);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.start(volume, loop);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic pause(): void {\r\n\t\tif (this.state !== AudioState.playing) {\r\n\t\t\tconsole.warn('Try to pause the sound but the sound is not playing.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.removeLoopTimer();\r\n\t\tconst elapsed = (AudioCore.context.currentTime - this._prevPlayTime) % this.duration;\r\n\t\tthis._offset += elapsed;\r\n\t\tthis.deleteSourceNode();\r\n\t\tthis.state = AudioState.suspended;\r\n\t}\r\n\r\n\tpublic resume(): void {\r\n\t\tthis.play();\r\n\t}\r\n\r\n\tpublic stop(): void {\r\n\t\tthis.removeLoopTimer();\r\n\t\tthis.deleteSourceNode();\r\n\t\tthis.state = AudioState.idle;\r\n\t}\r\n\r\n\tpublic setVolume(value: number): void {\r\n\t\tthis._volume = value;\r\n\t\tthis._gainNode.gain.setValueAtTime(value, AudioCore.context.currentTime);\r\n\t}\r\n\r\n\tpublic mute(value: boolean): void {\r\n\t\tthis._gainNode.gain.value = (value) ? 0 : this._volume;\r\n\t}\r\n\r\n\r\n\tprotected onStateChanged(prevState: string, currState: string): void {\r\n\t\tthis.onStateChange && this.onStateChange(this, prevState, currState);\r\n\t\tswitch (currState) {\r\n\t\t\tcase AudioState.idle:\r\n\t\t\t\tif (this._resolveForReady) {\r\n\t\t\t\t\tthis._resolveForReady();\r\n\t\t\t\t\tthis._resolveForReady = null;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}","import Sound from \"./Sound\";\r\n\r\nexport default class Html5AudioSound extends Sound {\r\n\r\n\tpublic load(src: string): void {\r\n\t\tthrow new Error(\"Method not implemented.\");\r\n\t}\r\n\r\n\tpublic play(volume: number = 1, loop: boolean = false): void {\r\n\r\n\t}\r\n\r\n\tpublic pause(): void {\r\n\t}\r\n\r\n\tpublic resume(): void {\r\n\t}\r\n\r\n\tpublic stop(): void {\r\n\t}\r\n\r\n\tpublic setVolume(value: number): void {\r\n\r\n\t}\r\n\r\n\tpublic mute(value: boolean): void {\r\n\t}\r\n\r\n\tpublic onStateChanged(prevState: string, currState: string): void {\r\n\r\n\t}\r\n}","\r\nexport default class Tween {\r\n\r\n\tprivate _listenerKey: string;\r\n\r\n\tprivate _to: any;\r\n\r\n\tprivate _duration: number;\r\n\r\n\tprivate _startTime: number;\r\n\r\n\tprivate _callback: Function;\r\n\r\n\tprivate _onUpdate: Function;\r\n\r\n\tprivate _lock = true;\r\n\r\n\tprivate _target: any;\r\n\r\n\tprivate _originalValues: any;\r\n\r\n\tprivate _elapsedTime: number = 0;;\r\n\r\n\tconstructor(target: any) {\r\n\t\tthis._listenerKey = window.heartBeat.registerListener(this.onTick.bind(this));\r\n\t\tthis._target = target;\r\n\t}\r\n\r\n\tprivate onTick(timeStamp: number): void {\r\n\t\tif (this._lock) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this._startTime) {\r\n\t\t\tthis._startTime = 0;\r\n\t\t}\r\n\t\tthis._elapsedTime += timeStamp;\r\n\r\n\t\tconsole.log();\r\n\r\n\t\tif (this._elapsedTime >= this._duration) {\r\n\t\t\tthis.updateTarget();\r\n\t\t\tthis.stop();\r\n\t\t\tif (this._callback) {\r\n\t\t\t\tthis._callback();\r\n\t\t\t}\r\n\t\t\twindow.heartBeat.removeListener(this._listenerKey);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.updateTarget();\r\n\t}\r\n\r\n\tprivate updateTarget(): void {\r\n\r\n\t\tlet updateValues = {};\r\n\r\n\t\tObject.keys(this._to).forEach((key) => {\r\n\t\t\tconst isIncrease = this._to[key] > this._originalValues[key];\r\n\r\n\t\t\tconst diffValue = this._to[key] - this._originalValues[key];\r\n\t\t\tconst beginValue = this._originalValues[key];\r\n\t\t\tlet newValue = this.linearNone(this._elapsedTime, beginValue, diffValue, this._duration);\r\n\r\n\t\t\tif ((isIncrease && newValue >= this._to[key]) || (!isIncrease && newValue <= this._to[key])) {\r\n\t\t\t\tnewValue = this._to[key];\r\n\t\t\t}\r\n\r\n\t\t\tthis._target[key] = newValue;\r\n\t\t\tupdateValues[key] = newValue;\r\n\t\t});\r\n\r\n\t\tif (this._onUpdate) {\r\n\t\t\tthis._onUpdate(updateValues);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic to(to: any, duration: number): Tween {\r\n\t\tthis._to = to;\r\n\t\tthis._duration = duration;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic onUpdate(callback: (changedValue: any) => void): Tween {\r\n\t\tthis._onUpdate = callback;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic onComplete(callback: Function): Tween {\r\n\t\tthis._callback = callback;\r\n\t\treturn this;\r\n\t}\r\n\r\n\tpublic start(): void {\r\n\t\tthis._lock = false;\r\n\t\tthis._originalValues = {};\r\n\t\tObject.keys(this._to).forEach((key) => {\r\n\t\t\tthis._originalValues[key] = this._target[key];\r\n\t\t});\r\n\t}\r\n\r\n\tpublic stop(): void {\r\n\t\tthis._lock = true;\r\n\t}\r\n\r\n\tprivate linearNone(t, b, c, d) {\r\n\t\treturn c * t / d + b;\r\n\t}\r\n}","export enum TrackType {\r\n\tMusic,\r\n\tSoundEffect\r\n}","import Sound from \"../sound/Sound\";\r\nimport WebAudioSound from \"../sound/WebAudioSound\";\r\nimport Html5AudioSound from \"../sound/Html5AudioSound\";\r\nimport State from \"../core/State\";\r\nimport Tween from \"../core/Tween\";\r\nimport RAFTimer from \"../core/RAFTimer\";\r\nimport { AudioState, IDuckingConfig } from \"../AudioBox\";\r\nimport { TrackType } from \"../enums\";\r\n\r\nexport default class Track extends State {\r\n\tprivate _soundMap: Map<string, Sound> = new Map<string, Sound>();\r\n\r\n\tprivate _isWebAudio = true;\r\n\r\n\tprivate _autoLoad = true;\r\n\r\n\tprivate _isDucking = false;\r\n\r\n\tprivate _currentDuckingConfig: IDuckingConfig;\r\n\r\n\tprivate _duckingTween: Tween;\r\n\r\n\tprivate _originalVolume: number;\r\n\r\n\tprivate _defaultSound: Sound;\r\n\r\n\tprivate _trackType: TrackType;\r\n\r\n\tprivate _volume = 1;\r\n\r\n\tprivate _loadedSoundCount = 0;\r\n\r\n\tpublic name: string;\r\n\r\n\tprivate get loadedSoundCount(): number {\r\n\t\treturn this._loadedSoundCount;\r\n\t}\r\n\r\n\tprivate set loadedSoundCount(value: number) {\r\n\t\tthis._loadedSoundCount = value;\r\n\t\tif (this.loadedSoundCount == this._soundMap.size) {\r\n\t\t\tthis.state = AudioState.ready;\r\n\t\t\tthis.state = AudioState.idle;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _currentPlayingCount = 0;\r\n\r\n\tprivate get currentPlayingCount(): number {\r\n\t\treturn this._currentPlayingCount;\r\n\t}\r\n\r\n\tprivate set currentPlayingCount(value: number) {\r\n\t\tif (value == 0) {\r\n\t\t\tthis.state = AudioState.idle;\r\n\t\t} else if (value > 0) {\r\n\t\t\tthis.state = AudioState.playing;\r\n\t\t}\r\n\t\tthis._currentPlayingCount = value;\r\n\t}\r\n\r\n\tpublic set volume(value: number) {\r\n\t\tthis._volume = value;\r\n\t\tthis._soundMap.forEach((sound) => {\r\n\t\t\tsound.setVolume(value);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic get volume(): number {\r\n\t\treturn this._volume;\r\n\t}\r\n\r\n\tpublic onStateChange: (track: Track, prevState: string, currState: string) => void;\r\n\r\n\tconstructor(type: TrackType = TrackType.Music, isWebAudio: boolean = true, autoLoad = true) {\r\n\t\tsuper();\r\n\t\tthis._trackType = type;\r\n\t\tthis._isWebAudio = isWebAudio;\r\n\t\tthis._autoLoad = autoLoad;\r\n\t}\r\n\r\n\tprotected onStateChanged(prevState: string, currState: string): void {\r\n\t\t//console.log(`track:${this.name} state:${prevState} to:${currState}`);\r\n\t\tthis.onStateChange && this.onStateChange(this, prevState, currState);\r\n\t}\r\n\r\n\tpublic hasSound(key: string): boolean {\r\n\t\treturn this._soundMap.has(key);\r\n\t}\r\n\r\n\tpublic addSound(keyOrSound: string | Sound, src: string): Sound {\r\n\t\tlet sound: Sound;\r\n\t\tthis.state = AudioState.loading;\r\n\r\n\t\tthis.log('track add');\r\n\r\n\t\tif (typeof keyOrSound == 'string' && !this.hasSound(keyOrSound)) {\r\n\t\t\tsound = this._isWebAudio ? new WebAudioSound(keyOrSound, src, this._autoLoad) : new Html5AudioSound(keyOrSound, src, this._autoLoad);\r\n\t\t\tthis._soundMap.set(keyOrSound, sound);\r\n\t\t} else if (!this.hasSound(sound.key)) {\r\n\t\t\tsound = keyOrSound as Sound;\r\n\t\t\tthis._soundMap.set(sound.key, sound);\r\n\t\t}\r\n\r\n\t\t// set first sound as default sound\r\n\t\tif (this._soundMap.size == 1) {\r\n\t\t\tthis._defaultSound = sound;\r\n\t\t}\r\n\r\n\t\tsound.onStateChange = this.onSoundStateChange.bind(this);\r\n\r\n\t\treturn sound;\r\n\t}\r\n\r\n\tprotected onSoundStateChange(sound: Sound, prevState: string, currState: string): void {\r\n\t\tswitch (currState) {\r\n\t\t\tcase AudioState.idle:\r\n\t\t\t\tif (prevState == AudioState.playing) {\r\n\t\t\t\t\tthis.currentPlayingCount--;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase AudioState.playing:\r\n\t\t\t\tthis.currentPlayingCount++;\r\n\t\t\t\tbreak;\r\n\t\t\tcase AudioState.ready:\r\n\t\t\t\tconsole.log('sound ready');\r\n\t\t\t\tthis.loadedSoundCount++;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic load(): void {\r\n\r\n\t}\r\n\r\n\tpublic playAllSounds(): void {\r\n\t\tif (this.state == AudioState.playing || this._trackType == TrackType.SoundEffect) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.volume = 0;\r\n\r\n\t\tthis.allSounds((sound) => {\r\n\t\t\tsound.play(0, true);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic play(key: string, loop: boolean = false, volume: number = 1): void {\r\n\t\tif (!this._soundMap.has(key)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst sound = this._soundMap.get(key);\r\n\t\tsound.play(volume, loop);\r\n\t}\r\n\r\n\tpublic pause(key: string): void {\r\n\t\tif (!this._soundMap.has(key)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst sound = this._soundMap.get(key);\r\n\t\tsound.pause();\r\n\t}\r\n\r\n\tpublic stop(key?: string): void {\r\n\t\tif (key) {\r\n\t\t\tconst sound = this._soundMap.get(key);\r\n\t\t\tif (sound.currentState == AudioState.playing) {\r\n\t\t\t\tsound.stop();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tthis.allSounds((sound) => {\r\n\t\t\t\tsound.stop();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic resume(key: string): void {\r\n\t\tif (!this._soundMap.has(key)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst sound = this._soundMap.get(key);\r\n\t\tsound.resume();\r\n\t}\r\n\r\n\tpublic mute(value: boolean): void {\r\n\t\tthis._soundMap.forEach((sound) => {\r\n\t\t\tsound.mute(value);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic ducking(config: IDuckingConfig): void {\r\n\t\tthis.log('ducking!');\r\n\t\t// 如果目前正在ducking, 就直接返回\r\n\t\tif (this._isDucking && (config.duration)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 有觀察對象,或有設置duration才當作duckin feature\r\n\t\t// 否則視為單純fade in/out\r\n\t\tif (config.duration) {\r\n\t\t\tthis._isDucking = true;\r\n\t\t\tthis._currentDuckingConfig = config;\r\n\t\t}\r\n\r\n\t\t// 如果此Track正在tweening就終止它, 避免多個tween同時操作音量造成混亂\r\n\t\tif (this._duckingTween) {\r\n\t\t\tthis._duckingTween.stop();\r\n\t\t\tthis._duckingTween = null;\r\n\t\t}\r\n\r\n\t\tthis._originalVolume = this.volume;\r\n\r\n\t\t// 如果原始音量為0,示為直接賦值,否則當作比例值處理\r\n\t\tlet toValue: number;\r\n\t\tif (config.force || this._originalVolume == 0) {\r\n\t\t\ttoValue = config.value;\r\n\t\t} else {\r\n\t\t\ttoValue = this._originalVolume * config.value\r\n\t\t}\r\n\r\n\t\tthis.fade(toValue, config.attack).then(() => {\r\n\t\t\tthis._duckingTween = null;\r\n\t\t\tif (!this._isDucking) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (config.duration) {\r\n\t\t\t\tlet timer = new RAFTimer();\r\n\t\t\t\ttimer.timeout(config.duration).then(() => {\r\n\r\n\t\t\t\t});\r\n\t\t\t\ttimer = null;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic releaseDucking(): void {\r\n\t\tconst config = this._currentDuckingConfig;\r\n\t\tif (!this._isDucking || !config) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.fade(this._originalVolume, config.release).then(() => {\r\n\t\t\tthis._isDucking = false;\r\n\t\t\tthis._duckingTween = null;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t *\r\n\t * @param {number} to \r\n\t * @param {number} duration in millisecond\r\n\t * @memberof Track\r\n\t */\r\n\tpublic fade(to: number, duration: number): Promise<any> {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tthis._duckingTween = new Tween(this)\r\n\t\t\t\t.to({ volume: to }, duration)\r\n\t\t\t\t.onComplete(() => {\r\n\t\t\t\t\tthis._duckingTween = null;\r\n\t\t\t\t\tresolve();\r\n\t\t\t\t});\r\n\t\t\tthis._duckingTween.start();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate log(text): void {\r\n\t\tconst div = document.createElement('div');\r\n\t\tdiv.innerHTML = text;\r\n\t\tdocument.body.appendChild(div);\r\n\t}\r\n\r\n\tprivate allSounds(callback: (sound: Sound) => void): void {\r\n\t\tthis._soundMap.forEach((sound) => {\r\n\t\t\tif (callback) {\r\n\t\t\t\tcallback(sound);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}","export default class HeartBeat {\r\n\r\n\tprivate _listener: Map<string, Function> = new Map<string,Function>();\r\n\r\n\tprivate INTERVAL = 5;\r\n\r\n\tprivate nPrevTime = 0;\r\n\r\n\tpublic init(): void {\r\n\t\trequestAnimationFrame(this.step.bind(this));\r\n\t}\r\n\r\n\tpublic registerListener(callback: Function): string {\r\n\t\tconst uuid = this.uuid();\r\n\t\tthis._listener.set(uuid,callback);\r\n\t\treturn uuid;\r\n\t}\r\n\r\n\tpublic removeListener(key:string) : void{\r\n\t\tthis._listener.delete(key);\r\n\t}\r\n\r\n\tprivate makeTimeslot(timestamp: number): void {\r\n\t\twhile (timestamp > 0) {\r\n\t\t\tthis.onTimeIncrease(Math.min(timestamp, this.INTERVAL));\r\n\t\t\ttimestamp -= this.INTERVAL;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate step(timestamp: number): void {\r\n\t\tthis.makeTimeslot((timestamp - this.nPrevTime) * 1);\r\n\t\tthis.nPrevTime = timestamp;\r\n\t\trequestAnimationFrame(this.step.bind(this));\r\n\t}\r\n\r\n\tprivate onTimeIncrease(timestamp: number): void {\r\n\t\t// override me\r\n\t\tthis._listener.forEach((value) => {\r\n\t\t\tvalue(timestamp);\r\n\t\t});\r\n\t}\r\n\t\r\n\tprivate uuid(): string {\r\n\t\tlet d = Date.now();\r\n\t\tif (typeof performance !== 'undefined' && typeof performance.now === 'function') {\r\n\t\t\td += performance.now(); //use high-precision timer if available\r\n\t\t}\r\n\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n\t\t\tconst r = (d + Math.random() * 16) % 16 | 0;\r\n\t\t\td = Math.floor(d / 16);\r\n\t\t\treturn (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n\t\t});\r\n\t}\t\r\n}","import State from \"./State\";\r\n\r\nexport default abstract class DuelState extends State {\r\n\tprotected _secondState: string;\r\n\r\n\tprotected get secondState(): string {\r\n\t\treturn this._secondState;\r\n\t}\r\n\r\n\tprotected set secondState(val: string) {\r\n\t\tconst prevState = this._secondState;\r\n\t\tthis._secondState = val;\r\n\t\tthis.onSecondStateChanged(prevState, this.secondState);\r\n\t}\r\n\r\n\tprotected abstract onSecondStateChanged(prevState: string, currState: string): void;\r\n}","import Track from \"./track/Track\";\r\nimport { TrackType } from \"./enums\";\r\nimport AudioCore from \"./core/AudioCore\";\r\nimport HeartBeat from \"./core/HeartBeat\";\r\nimport DuelState from \"./core/DuelState\";\r\nimport { AudioNodeType, AvaliableAudioNode } from \"./core/NodeFactory\";\r\n\r\nexport interface IDuckingConfig {\r\n\t/**\r\n\t * [UN_SUPPORT] 要套用此ducking的群組, 與tracks屬性必須擇一使用\r\n\t * \r\n\t * @type {Array<number>}\r\n\t * @memberof DuckingConfig\r\n\t */\r\n\tgroups?: Array<number>;\r\n\t/**\r\n\t * 要套用此ducking的音軌, 與groups屬性必須擇一使用\r\n\t *\r\n\t * @type {Array<number>}\r\n\t * @memberof DuckingConfig\r\n\t */\r\n\ttracks?: Array<number>;\r\n\t/**\r\n\t * [optional] 降到指定音量後的維持時間長度\r\n\t * 若設定此值,則以此值為主.否則,會觀察指定的track,待其idle才會進入release階段\r\n\t * \r\n\t * @type {number}\r\n\t * @memberof DuckingConfig\r\n\t */\r\n\tduration?: number;\r\n\t/**\r\n\t * 降低到指定音量的duration\r\n\t *\r\n\t * @type {number}\r\n\t * @memberof DuckingConfig\r\n\t */\r\n\tattack: number;\r\n\t/**\r\n\t * 回復到原先音量的duration\r\n\t *\r\n\t * @type {number}\r\n\t * @memberof DuckingConfig\r\n\t */\r\n\trelease?: number;\r\n\t/**\r\n\t * 降低音量的目標值. 範圍: 0~1\r\n\t *\r\n\t * @type {number}\r\n\t * @memberof DuckingConfig\r\n\t */\r\n\tvalue: number;\r\n\t/**\r\n\t * [optional] 發起ducking的track, 若此值與duration均為空, 則示為單純音效fade in/out, 將無視release數值\r\n\t *\r\n\t * @type {number}\r\n\t * @memberof DuckingConfig\r\n\t */\r\n\tref?: number;\r\n\t/**\r\n\t * 此值為true,表示強制將音量設定到絕對值, 預設為false\r\n\t *\r\n\t * @type {boolean}\r\n\t * @memberof DuckingConfig\r\n\t */\r\n\tforce?: boolean;\r\n}\r\n\r\nexport interface ITrackMap {\r\n\t[key: string]: ITrackConfig;\r\n}\r\n\r\nexport interface ITrackConfig {\r\n\ttype: TrackType;\r\n\tgroup?: number;\r\n\tsounds: Array<string>;\r\n}\r\n\r\nexport interface ISoundItemMap {\r\n\t[key: string]: ISoundItem\r\n}\r\n\r\nexport interface ISoundItem {\r\n\tsrc: string;\r\n}\r\n\r\nexport interface AudioBoxConfig {\r\n\tautoFocus?: boolean; // true\r\n\tautoLoad?: boolean; // true\r\n\tpauseOnBlur?: boolean; // true\r\n\tforceHtml5?: boolean; // false\r\n\tsound: ISoundItemMap;\r\n\ttrack?: ITrackMap;\r\n\tmusicState?: IMusicStateConfig;\r\n}\r\n\r\nexport interface IMusicStateConfig {\r\n\t/**\r\n\t * 非此狀態的track, fade out的通用設定\r\n\t *\r\n\t * @type {DuckingConfig}\r\n\t * @memberof StateConfig\r\n\t */\r\n\tfadeOut: IDuckingConfig;\r\n\tstate: { [key: string]: IMusicStateItem };\r\n\tsequence: Array<string>;\r\n}\r\n\r\nexport interface IMusicStateItem {\r\n\tname?: string;\r\n\tdesc?: string;\r\n\tducking: Array<IDuckingConfig>; // 此state要處理的ducking組合\r\n\r\n\t/**\r\n\t * 設定要略過release的tracks\r\n\t *\r\n\t * @type {Array<number>}\r\n\t * @memberof SoundState\r\n\t */\r\n\texception?: Array<number>;\r\n\r\n\t/**\r\n\t * 脫離此音樂狀態,相關track將音量調整到{value}值的duration\r\n\t *\r\n\t * @type {number}\r\n\t * @memberof SoundState\r\n\t */\r\n\trelease?: number;\r\n\t/**\r\n\t * 脫離此音樂狀態,相關track要調整到的目標音量值\r\n\t *\r\n\t * @type {number}\r\n\t * @memberof SoundState\r\n\t */\r\n\tvalue?: number;\r\n\t/**\r\n\t * 若此值為true, 將不執行前一狀態的release, 而是直接將非本state的音軌全部音量調為0\r\n\t *\r\n\t * @type {boolean}\r\n\t * @memberof SoundState\r\n\t */\r\n\tforceMute?: boolean;\r\n}\r\n\r\nexport enum AudioState {\r\n\tloading = 'loading',\r\n\tdecoding = 'decoding',\r\n\tready = 'ready',\r\n\tidle = 'idle',\r\n\tplaying = 'playing',\r\n\tsuspended = 'suspended',\r\n\terror = 'error'\r\n}\r\n\r\nexport default class AudioBox extends DuelState {\r\n\r\n\t/**\r\n\t * Triggers when all tracks are ready\r\n\t *\r\n\t * @memberof AudioBox\r\n\t */\r\n\tpublic onReady: () => void;\r\n\r\n\tprivate _tracks: Array<Track> = [];\r\n\r\n\tprivate _config: AudioBoxConfig;\r\n\r\n\tprivate _soundToTrack: Map<string, Track> = new Map<string, Track>();\r\n\r\n\tprivate _indexToTrack: Map<string, Track> = new Map<string, Track>();\r\n\r\n\tprivate _musicTracks: Array<Track> = [];\r\n\r\n\tprivate _soundTracks: Array<Track> = [];\r\n\r\n\tprivate _currentMusicStateTracks: Array<Track> = [];\r\n\r\n\tprivate _stateConfig: IMusicStateConfig;\r\n\r\n\tprivate _trackConfig: ITrackMap;\r\n\r\n\tprivate _trackReadyCount: number = 0;\r\n\r\n\tprivate get trackReadyCount(): number {\r\n\t\treturn this._trackReadyCount;\r\n\t}\r\n\r\n\tprivate set trackReadyCount(value: number) {\r\n\t\tthis._trackReadyCount = value;\r\n\t\tif (this.trackReadyCount == this._indexToTrack.size) {\r\n\t\t\tthis.setState(AudioState.ready);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate get _hasTrackConfig(): boolean {\r\n\t\treturn this._config.track && Object.keys(this._config.track).length > 0;\r\n\t}\r\n\r\n\tpublic get track(): Array<Track> {\r\n\t\treturn this._tracks;\r\n\t}\r\n\r\n\tpublic get state(): AudioState {\r\n\t\treturn this._state as AudioState;\r\n\t}\r\n\r\n\tpublic get musicState(): string {\r\n\t\treturn this._secondState;\r\n\t}\r\n\r\n\tconstructor(config: AudioBoxConfig) {\r\n\t\tsuper();\r\n\t\tif (AudioCore.useWebAudio) {\r\n\t\t\tAudioCore.init();\r\n\t\t}\r\n\r\n\t\tthis._config = config;\r\n\r\n\t\tthis._stateConfig = config.musicState;\r\n\t\tthis._trackConfig = config.track;\r\n\r\n\t\tthis.setState(AudioState.loading);\r\n\r\n\t\tthis.createTracks();\r\n\r\n\t\tconst heartBeat = new HeartBeat();\r\n\t\theartBeat.init();\r\n\t\twindow.heartBeat = heartBeat;\r\n\t}\r\n\r\n\tprivate setState(state: string): void {\r\n\t\tconst prevState = this._state;\r\n\t\tthis._state = state;\r\n\t\tthis.onStateChanged(prevState, this.state);\r\n\t}\r\n\r\n\tpublic onStateChanged(prevState: string, currState: string): void {\r\n\t\tswitch (currState) {\r\n\t\t\tcase AudioState.ready:\r\n\t\t\t\tthis.onReady && this.onReady();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onSecondStateChanged(prevState: string, currState: string): void {\r\n\t\tthis.log(`from:${prevState} to:${currState}`);\r\n\t}\r\n\r\n\tprivate log(text): void {\r\n\t\tconst div = document.createElement('div');\r\n\t\tdiv.innerHTML = text;\r\n\t\tdocument.body.appendChild(div);\r\n\t}\r\n\r\n\tprivate addSoundToTrack(track: Track, soundKey: string, soundItem: ISoundItem): void {\r\n\t\tif (!soundItem || this._soundToTrack.has(soundKey)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._soundToTrack.set(soundKey, track);\r\n\t\ttrack.addSound(soundKey, soundItem.src);\r\n\t}\r\n\r\n\tprotected onTrackStateChange(track: Track, prevState: string, currState: string): void {\r\n\t\tconsole.log('123', currState);\r\n\t\tswitch (currState) {\r\n\t\t\tcase AudioState.ready:\r\n\t\t\t\tthis.trackReadyCount++;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 載入設定檔的所有音效\r\n\t *\r\n\t * @returns {void}\r\n\t * @memberof AudioBox\r\n\t */\r\n\tpublic createTracks(): void {\r\n\t\tif (this._hasTrackConfig) {\r\n\t\t\tObject.keys(this._config.track).forEach((trackIndex) => {\r\n\t\t\t\tif (this._indexToTrack.has(trackIndex)) {\r\n\t\t\t\t\t// track exists\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tconst trackConfig = this._config.track[trackIndex];\r\n\r\n\t\t\t\tconst track = new Track();\r\n\t\t\t\ttrack.name = trackIndex;\r\n\t\t\t\ttrack.onStateChange = this.onTrackStateChange.bind(this);\r\n\t\t\t\ttrackConfig.sounds.forEach((soundKey: string) => {\r\n\t\t\t\t\tconst soundItem = this._config.sound[soundKey];\r\n\t\t\t\t\tthis.addSoundToTrack(track, soundKey, soundItem);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._indexToTrack.set(trackIndex, track);\r\n\r\n\t\t\t\tif (trackConfig.type == TrackType.SoundEffect) {\r\n\t\t\t\t\tthis._soundTracks.push(track);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._musicTracks.push(track);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconst track = new Track();\r\n\t\t\tObject.keys(this._config.sound).forEach((soundKey: string) => {\r\n\t\t\t\tconst soundItem = this._config.sound[soundKey];\r\n\t\t\t\tthis.addSoundToTrack(track, soundKey, soundItem);\r\n\t\t\t});\r\n\t\t\tthis._indexToTrack.set(`0`, track);\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\tpublic loadSound(key: string, src: string): void {\r\n\r\n\t}\r\n\r\n\tpublic mute(value: boolean): void {\r\n\t\tif (AudioCore.useWebAudio) {\r\n\t\t\tAudioCore.mute(value);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic muteMusic(value: boolean): void {\r\n\t\tthis._musicTracks.forEach((track) => {\r\n\t\t\ttrack.mute(value);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic muteSound(value: boolean): void {\r\n\t\tthis._soundTracks.forEach((track) => {\r\n\t\t\ttrack.mute(value);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic play(key: string, loop = false): void {\r\n\t\tif (!this._soundToTrack.has(key)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._soundToTrack.get(key).play(key, loop);\r\n\t}\r\n\r\n\tpublic start(group?): void {\r\n\t\tthis._musicTracks.forEach((track) => {\r\n\t\t\ttrack.playAllSounds();\r\n\t\t});\r\n\t}\r\n\r\n\tpublic pause(key: string): void {\r\n\t\tif (!this._soundToTrack.has(key)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._soundToTrack.get(key).pause(key);\r\n\t}\r\n\r\n\tpublic stop(): void {\r\n\t\tthis._indexToTrack.get('1').stop();\r\n\t}\r\n\r\n\tpublic resume(key: string): void {\r\n\t\tif (!this._soundToTrack.has(key)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._soundToTrack.get(key).resume(key);\r\n\t}\r\n\r\n\tpublic seek(): void {\r\n\r\n\t}\r\n\r\n\tpublic shutdown(): void {\r\n\r\n\t}\r\n\r\n\tpublic ducking(config: any): void {\r\n\t\tthis._musicTracks[0].ducking(config);\r\n\t}\r\n\r\n\tpublic transitionToState(toState: string, forceSwitch = false): void {\r\n\t\tconst prevMusicState = this.musicState;\r\n\t\tconst prevStateItem = this._stateConfig.state[prevMusicState];\r\n\t\tconst stateItem = this._stateConfig.state[toState];\r\n\t\tconst defaultFadeOut = Object.assign({}, this._stateConfig.fadeOut);\r\n\r\n\t\t// 紀錄fade in 的tracks.\r\n\t\tconst fadeInMap = {};\r\n\r\n\t\tif (this.isLowerMusicState(toState) && !forceSwitch) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!stateItem) {\r\n\t\t\tconsole.error(`[AUDIO_BOX] unavaliable music state:${toState}`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._currentMusicStateTracks = [];\r\n\r\n\t\t// fade in tracks\r\n\t\tstateItem.ducking.forEach((duckingConfig) => {\r\n\t\t\tduckingConfig.tracks.forEach((trackIndex) => {\r\n\t\t\t\tconst trackConfig = this._trackConfig[trackIndex];\r\n\t\t\t\tfadeInMap[trackIndex] = true;\r\n\t\t\t\tconst track = this._indexToTrack.get(trackIndex + '');\r\n\t\t\t\t// 需要從頭播放的音軌\r\n\t\t\t\t// if (trackConfig.replay) {\r\n\t\t\t\t// \ttrack.play('');\r\n\t\t\t\t// }\r\n\r\n\t\t\t\tthis._currentMusicStateTracks.push(track);\r\n\t\t\t\tthis.log(`fade in:${trackIndex}`)\r\n\t\t\t\ttrack.ducking(duckingConfig);\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// fade out tracks\r\n\t\tdefaultFadeOut.tracks.forEach((trackIndex) => {\r\n\t\t\t// 如果屬於fade in 或是要略過的track, 就不執行release\r\n\t\t\tif (fadeInMap[trackIndex] || stateItem.exception && stateItem.exception.indexOf(trackIndex) !== -1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst trackConfig = this._trackConfig[trackIndex];\r\n\r\n\t\t\t// 如果當前狀態為強制靜音track, 則會直接將前一狀態的tracks都禁音\r\n\t\t\tif (stateItem.forceMute) {\r\n\t\t\t\tconst track = this._indexToTrack.get(trackIndex + '');\r\n\t\t\t\t// 如果是設定為每次從頭播放的音軌, ducking結束後停止該音軌\r\n\t\t\t\t// if (trackConfig.replay) {\r\n\t\t\t\t// \ttrack.stop();\r\n\t\t\t\t// }\r\n\t\t\t\ttrack.volume = 0;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// try to override default fade out config\r\n\t\t\tif (prevStateItem) {\r\n\t\t\t\tif (prevStateItem.release !== undefined) {\r\n\t\t\t\t\tdefaultFadeOut.attack = prevStateItem.release;\r\n\t\t\t\t}\r\n\t\t\t\tif (prevStateItem.value !== undefined) {\r\n\t\t\t\t\tdefaultFadeOut.value = prevStateItem.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.log(`fade out:${trackIndex}`)\r\n\r\n\t\t\tconst track = this._indexToTrack.get(trackIndex + '');\r\n\t\t\ttrack.ducking(defaultFadeOut);\r\n\t\t});\r\n\r\n\t\tthis.secondState = toState;\r\n\t}\r\n\r\n\t/**\r\n\t * [WEB_AUDIO_ONLY] append a custom audio node to the web audio context\r\n\t *\r\n\t * @param {AudioNodeType} nodeType\r\n\t * @param {*} args\r\n\t * @returns {AvaliableAudioNode}\r\n\t * @memberof AudioBox\r\n\t */\r\n\tpublic appendAudioNode(nodeType: AudioNodeType, ...args): AvaliableAudioNode {\r\n\t\tconst node = AudioCore.appendNode(nodeType, ...args);\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * check if the target music state priority is lower than current music state\r\n\t *\r\n\t * @private\r\n\t * @param {string} musicState\r\n\t * @returns {boolean}\r\n\t * @memberof AudioBox\r\n\t */\r\n\tprivate isLowerMusicState(musicState: string): boolean {\r\n\t\tif (!this.musicState) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn this._stateConfig.sequence.indexOf(musicState) <= this._stateConfig.sequence.indexOf(this.musicState);\r\n\t}\r\n}\r\n","import AudioBox from '../src/AudioBox';\r\nimport { TrackType } from '../src/enums';\r\n\r\nconst PORT = 5502;\r\nlet URL = `http://localhost:${PORT}/demo/assets/`;\r\n\r\ndeclare var process: {\r\n\tenv: {\r\n\t\tNODE_ENV: string\r\n\t}\r\n}\r\n\r\n\r\nif (process.env[\"NODE_ENV\"] === 'production') {\r\n\tURL = `./assets/`;\r\n}\r\n\r\nconst myAudioBox = new AudioBox({\r\n\tsound: {\r\n\t\tBGM: {\r\n\t\t\tsrc: `${URL}BGM.mp3`\r\n\t\t},\r\n\t\tBGM_01: {\r\n\t\t\tsrc: `${URL}BGM_01.mp3`\r\n\t\t},\r\n\t\tBGM_02: {\r\n\t\t\tsrc: `${URL}BGM_02.mp3`\r\n\t\t},\r\n\t\tBGM_03: {\r\n\t\t\tsrc: `${URL}BGM_03.mp3`\r\n\t\t},\r\n\t\tBGM_04: {\r\n\t\t\tsrc: `${URL}BGM_04.mp3`\r\n\t\t},\r\n\t\tBGM_05: {\r\n\t\t\tsrc: `${URL}BGM_05.mp3`\r\n\t\t},\r\n\t\tSE: {\r\n\t\t\tsrc: `${URL}SE.mp3`\r\n\t\t}\r\n\t},\r\n\ttrack: {\r\n\t\t1: {\r\n\t\t\ttype: TrackType.Music,\r\n\t\t\tsounds: [\r\n\t\t\t\t'BGM'\r\n\t\t\t]\r\n\t\t},\r\n\t\t2: {\r\n\t\t\ttype: TrackType.Music,\r\n\t\t\tsounds: [\r\n\t\t\t\t'BGM_01',\r\n\t\t\t]\r\n\t\t},\r\n\t\t3: {\r\n\t\t\ttype: TrackType.Music,\r\n\t\t\tsounds: [\r\n\t\t\t\t'BGM_02',\r\n\t\t\t]\r\n\t\t},\r\n\t\t4: {\r\n\t\t\ttype: TrackType.Music,\r\n\t\t\tsounds: [\r\n\t\t\t\t'BGM_03',\r\n\t\t\t]\r\n\t\t},\r\n\t\t5: {\r\n\t\t\ttype: TrackType.Music,\r\n\t\t\tsounds: [\r\n\t\t\t\t'BGM_04',\r\n\t\t\t]\r\n\t\t},\r\n\t\t6: {\r\n\t\t\ttype: TrackType.Music,\r\n\t\t\tsounds: [\r\n\t\t\t\t'BGM_05',\r\n\t\t\t]\r\n\t\t},\r\n\t\t7: {\r\n\t\t\ttype: TrackType.SoundEffect,\r\n\t\t\tsounds: [\r\n\t\t\t\t'SE'\r\n\t\t\t]\r\n\t\t}\r\n\t},\r\n\tmusicState: {\r\n\t\tsequence: ['idle', 'start', 'ohh', 'wow', 'woow', 'extreme'],\r\n\t\tfadeOut: {\r\n\t\t\ttracks: [\r\n\t\t\t\t1, 2, 3, 4, 5, 6\r\n\t\t\t],\r\n\t\t\tattack: 1000,\r\n\t\t\tvalue: 0\r\n\t\t},\r\n\t\tstate: {\r\n\t\t\t'idle': {\r\n\t\t\t\trelease: 1000,\r\n\t\t\t\tvalue: 0,\r\n\t\t\t\tducking: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttracks: [\r\n\t\t\t\t\t\t\t1\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tattack: 20,\r\n\t\t\t\t\t\tvalue: 1\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t'start': {\r\n\t\t\t\trelease: 10000,\r\n\t\t\t\tvalue: 0,\r\n\t\t\t\t// exception: [\r\n\t\t\t\t// \t3,4,5\r\n\t\t\t\t// ],\r\n\t\t\t\tducking: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttracks: [\r\n\t\t\t\t\t\t\t1, 2\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tattack: 20,\r\n\t\t\t\t\t\tvalue: 1\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t'ohh': {\r\n\t\t\t\trelease: 10000,\r\n\t\t\t\tvalue: 0,\r\n\t\t\t\t// exception: [\r\n\t\t\t\t// \t3,4,5\r\n\t\t\t\t// ],\r\n\t\t\t\tducking: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tforce: true,\r\n\t\t\t\t\t\ttracks: [\r\n\t\t\t\t\t\t\t1, 2, 3\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tattack: 350,\r\n\t\t\t\t\t\tvalue: 1\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t'wow': {\r\n\t\t\t\trelease: 5000,\r\n\t\t\t\tvalue: 0,\r\n\t\t\t\tducking: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttracks: [\r\n\t\t\t\t\t\t\t1, 2, 4\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tattack: 200,\r\n\t\t\t\t\t\tvalue: 1\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t'woow': {\r\n\t\t\t\trelease: 5000,\r\n\t\t\t\tvalue: 0,\r\n\t\t\t\tducking: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttracks: [\r\n\t\t\t\t\t\t\t1, 2, 5\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tattack: 100,\r\n\t\t\t\t\t\trelease: 200,\r\n\t\t\t\t\t\tvalue: 1\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t'extreme': {\r\n\t\t\t\trelease: 200,\r\n\t\t\t\tvalue: 0,\r\n\t\t\t\tforceMute: true,\r\n\t\t\t\tducking: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttracks: [\r\n\t\t\t\t\t\t\t1, 2, 6\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tattack: 1600,\r\n\t\t\t\t\t\trelease: 200,\r\n\t\t\t\t\t\tvalue: 1\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\n\r\n// const analyser = myAudioBox.appendAudioNode(AudioNodeType.AnalyserNode) as AnalyserNode;\r\n\r\n// analyser.fftSize = 2048;\r\n// var bufferLength = analyser.fftSize;\r\n// var dataArray = new Uint8Array(bufferLength);\r\n\r\n// window.setInterval(() => {\r\n// \tconsole.log(dataArray);\r\n// \tanalyser.getByteFrequencyData(dataArray);\r\n// }, 5000);\r\n\r\n\r\ndocument.getElementById('play').addEventListener('click', () => {\r\n\tmyAudioBox.play('BGM', true);\r\n});\r\n\r\ndocument.getElementById('pause').addEventListener('click', () => {\r\n\tmyAudioBox.pause('BGM');\r\n});\r\n\r\ndocument.getElementById('resume').addEventListener('click', () => {\r\n\t//myAudioBox.resume('BGM');\r\n\tconsole.log(myAudioBox.state);\r\n});\r\n\r\ndocument.getElementById('stop').addEventListener('click', () => {\r\n\tmyAudioBox.stop();\r\n});\r\n\r\ndocument.getElementById('se').addEventListener('click', () => {\r\n\tmyAudioBox.resume('SE');\r\n});\r\n\r\n// mute music\r\ndocument.getElementById('mute-music').addEventListener('click', () => {\r\n\tmyAudioBox.muteMusic(true);\r\n});\r\n\r\ndocument.getElementById('unmute-music').addEventListener('click', () => {\r\n\tmyAudioBox.muteMusic(false);\r\n});\r\n\r\n// mute sound\r\ndocument.getElementById('mute-sound').addEventListener('click', () => {\r\n\tmyAudioBox.muteSound(true);\r\n});\r\n\r\ndocument.getElementById('unmute-sound').addEventListener('click', () => {\r\n\tmyAudioBox.muteSound(false);\r\n});\r\n\r\n// mute all\r\ndocument.getElementById('mute-all').addEventListener('click', () => {\r\n\tmyAudioBox.mute(true);\r\n});\r\n\r\ndocument.getElementById('unmute-all').addEventListener('click', () => {\r\n\tmyAudioBox.mute(false);\r\n});\r\n\r\n// ducking\r\ndocument.getElementById('ducking-bgm').addEventListener('click', () => {\r\n\tmyAudioBox.ducking({\r\n\t\ttracks: [\r\n\t\t\t1,\r\n\t\t\t2,\r\n\t\t\t4\r\n\t\t],\r\n\t\tattack: 5000,\r\n\t\tvalue: 0\r\n\t});\r\n});\r\n\r\n// music state\r\n\r\ndocument.getElementById('music-state-start').addEventListener('click', () => {\r\n\tmyAudioBox.start();\r\n});\r\n\r\n\r\nvar select = document.getElementById('states') as HTMLSelectElement;\r\n\r\ndocument.getElementById('music-state-switch').addEventListener('click', () => {\r\n\tvar currSelectText = select.value;\r\n\tmyAudioBox.transitionToState(currSelectText);\r\n});\r\n\r\ndocument.getElementById('music-state-switch-force').addEventListener('click', () => {\r\n\tvar currSelectText = select.value;\r\n\tmyAudioBox.transitionToState(currSelectText, true);\r\n});"]}